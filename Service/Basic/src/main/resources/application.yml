server:
  port: 8802
  servlet:
    context-path: /basic
spring:
  cloud:
    nacos:
      discovery:
        heart-beat-interval: 2 # 心跳间隔
        heart-beat-timeout: 4 # 心跳超时时间
        ip-delete-timeout: 6 # 剔除服务时间
        ephemeral: true # 是否为临时服务实例
  application:
    name: basic # 服务名称
  datasource:
    driver-class-name: ${mysql.basic.driver}
    url: ${mysql.basic.url}
    username: ${mysql.basic.username}
    password: ${mysql.basic.password}
#  cloud:
#    sentinel:
#      eager: true
#      transport:
#        dashboard: ${sentinel.dashboard.url}

mybatis-plus:
  mapper-locations: classpath:/Mapper/*Mapper.xml
  type-aliases-package: com.service.basic.doMain # 类别名包扫描
  configuration:
    call-setters-on-nulls: false   # 当查询到的字段为空是,是否调用set方法对属性进行Null值的初始化
    local-cache-scope: STATEMENT  # 默认为session级别缓存,STATEMENT:关闭一级缓存
    cache-enabled: false   #是否开启二级缓存,默认为true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl # 打印SQL
  global-config:
    banner: false

# PageHelper禁止Logo输出：添加环境变量:PAGEHELPER_BANNER=false;


seata:
  enabled: true # 启用 Seata
  application-id: ${spring.application.name} # 应用程序ID
  tx-service-group: ${seata.txServiceGroup} # 事务分组
  service:
    vgroup-mapping:
      tx_group: default # 服务:事务组 映射
  registry:
    type: nacos # 注册中心类型
    nacos:
      server-addr: ${spring.cloud.nacos.discovery.server-addr} # Nacos 服务器地址
      application: seata-server
      group: ${seata.group}
      namespace: ${seata.namespace}
  config:
    type: nacos # 配置中心类型，这里使用 Nacos
    nacos:
      server-addr: ${spring.cloud.nacos.discovery.server-addr} # Nacos 服务器地址
      group: ${seata.group} # Nacos 配置分组
      namespace: ${seata.namespace} # Nacos 命名空间
      data-id: ${seata.dataId}
  enable-auto-data-source-proxy: true # 启用自动数据源代理
  data-source-proxy-mode: AT # 数据源代理模式