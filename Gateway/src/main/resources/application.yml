server:
  port: 8088
spring:
  application:
    name: Gateway # 服务名称
  redis:
    host: 192.168.110.130 # redis地址
    port: 6379
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.2.51:8848 # nacos服务地址
    gateway:
      discovery:
        locator:
          lower-case-service-id: true # 开启服务名称小写转换
      routes:
        - id: UserDemo # 路由ID标识，必须唯一
          uri: lb://UserDemo # 路由的目标地址，lb就是负载均衡
          predicates: # 路由断言，判断请求是否符合规则
            - Path=/user/**
        - id: OrderDemo
          uri: lb://OrderDemo
          predicates:
            - Path=/order/**
          filters: # 过滤器配置
            - name: RequestRateLimiter # 配置请求限流控制器,用令牌桶算法实现
              args: # 参数列表,对应RedisRateLimiter.config中的属性
                keyResolver: '#{@keyResolverImpl}' # SpringEl表达式获取SpringBean,格式为'#{@BeanName}',当前为自定义keyResolver实现
                redis-rate-limiter.replenishRate: 1 # 每秒生产的令牌个数
                redis-rate-limiter.burstCapacity: 5 # 令牌桶容量上限
      default-filters:  # 默认拦截器
        - AddRequestHeader=HeaderMessage,China No.1   # 给请求添加请求头

